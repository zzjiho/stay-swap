version: "3.9"

#  Network
networks:
  staynet:
    driver: bridge

#  Services
services:

  # Redis
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports: ["6379:6379"]
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes: ["redis_data:/data"]
    networks: ["staynet"]

  # MongoDB
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    restart: unless-stopped
    ports: ["27017:27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes: ["mongo_data:/data/db"]
    networks: ["staynet"]

  # ZooKeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks: ["staynet"]

  # Kafka (브로커 1 대)
  kafka:
    image: confluentinc/cp-kafka:6.2.1
    container_name: kafka
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # 내부용 / 외부용 리스너 분리
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # 단일 브로커용 기본 설정
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168   # 7 일

      # JVM 메모리 튜닝
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"

    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks: ["staynet"]

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    ports: ["9091:8080"]
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: "StaySwap Local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: ${KAFKA_UI_USERNAME}
      SPRING_SECURITY_USER_PASSWORD: ${KAFKA_UI_PASSWORD}
    networks: ["staynet"]

#  Volumes
volumes:
  redis_data:
  rabbitmq_data:
  mongo_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data: